services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: real_time_comunication
      TZ: "GMT"
      PGTZ: "GMT"
    ports:
      - "5544:5432" # external:internal
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - main_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=gowtampaul0@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=password
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - main_network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server_app
    env_file:
      - ./server/.env.development
    ports:
      - "3900:3900"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - main_network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client_app
    ports:
      - "3100:3100"
    env_file:
      - ./client/.env.development
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - main_network
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - client
  #     - server
  #   networks:
  #     - main_network

  # backup:
  #   image: postgres:16-alpine
  #   container_name: db_backup
  #   depends_on:
  #     - postgres
  #   entrypoint: ["sh", "-c", "/backup.sh"]
  #   volumes:
  #     - ./backups:/backups # Mount local folder to store backups
  #     - ./scripts/backup.sh:/backup.sh
  #   environment:
  #     PGPASSWORD: password # match your DB password
  #   networks:
  #     - main_network

  # restore:
  #   image: postgres:16-alpine
  #   container_name: postgres_restore
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - ./backups:/backups  # Mount backup directory
  #     - ./scripts/restore.sh:/restore.sh  # Mount restore script
  #   entrypoint: ["sh", "/restore.sh"]  # Execute the restore script
  #   environment:
  #     PGPASSWORD: password  # PostgreSQL password
  #   networks:
  #     - main_network


networks:
  main_network:
    driver: bridge

volumes:
  postgres_data:
